Списки:
Маркированный список: ul - li   (unorder list - list)
Нумерованный список: ol - li    (order list - list)
start - лдя начала нумерации в ol 

Гиперссылка - активный элемент (текст, изображение, кнопка) одного домента. При нажатии на не происходит переход к другому документу или его элементу. Документы, содержащие гиперссылки, называются гипертекстовыми.
a - тэг ссылки.
href - обязательный атрибут.

Виды ссылок:
- относительные
- абсолютные
- якоря

target="_blank";
<a href="#p10">Прочитать 10 параграф</a>... <p id="p10">

Изображния:
jpeg, gif, svg, png: png-8, png-32.

< img src = "img/my_foto.jpg" alt = "это моя фотография" title = "это моя фотография" width = "300" >

Элементы форм:
< input type = "text" size = "30" placeholder = "Ваше Имя" >
< input type = "password" size = "8" >
< input type = "checkbox" checked = "checked" >
< input type = "radio" name = "radio" >
< input type = "file" >
< input type = "submit" value = "Сохранить" >
< input type = "reset" value = "Очистить" >
< input type = "button" value = "просто кнопка" >

textarea - cols, rows
select - выпадающий список, элементы которого указываются в теге option.
multiple - выбор нескольких пунктов; size - опетередяет число строк выпадающего списка.

Тег <label>
Тег < label > устанавливает связь между определенной меткой, в качестве которой обычно выступает текст, и элементом формы (< input >, < select >, < textarea >). Такая связь нужна, чтобы изменять значения элементов формы при нажатии курсором мыши на текст. С помощью <label> можно устанавливать горячие клавиши на клавиатуре и переходить на активный элемент подобно ссылкам.

Контруктор карт.
https://yandex.ru/map-constructor/

Третья лекция - Введение в css:
css - Cascading Style Sheets
Селектор {свойство: значение}

Lesson 4: Основные тэги для вёрстки.
div - блочный элемент
span - строчный элемент

Блочный элемент:
    1. Отображается на странице в виде прямоугольника.
    2. Занимает всю доступную ширину.
    3. Высота определяется содержимым.
    4. Начинается с новой строки.
    5. Допускается вкладывать один блочный элемент внутрь другого.
    6. Запрещено добавлять внутрь строчных элементов блочные, кроме элемента <img>
Блочные элементы: div, form, h1, p, table, ul, li, ol, body.
Блочный элемент создаёт разрыв строки перед тэгом и после него. Он образует прямоугольную область, которая занимает вю ширину веб-страницы (100%) или блока-родителя, если для него нет значения width.

Строный элемент:
    1. Используется для изменения вида текста и логического выделения.
    2. Является частью строки.
    3. Ширина равна содержимому полю значения отступов.
    4. Внутрь строчных элементов допустимо помещать текст или другие строчные элементы.
    5. Свойства, связанные с размерами, неприменимы.
    6. Элементы, идущие подряд, не переносятся на другую строку, располагаются на одной строке.
Строчные элементы: span, a, i, strong, b, em, font, img, input.

img - замещаемый строчный элемент. При помощи замещаемых элементов указывается, что в этом месте должен быть какой-то сторонний объект, в нашем случае, картинка. Замещаемому элементу задаётся ширина и высота. Но это всё равно строчный элемент.

Ширина и высота элемента:
    1. Содержимое (width, height)
    2. Внутренний отступ или поле элемента (padding) добавляет отступы внутри элемента, между его основным содержимым и границей. Если элементу задать фон, он распространится и на поля элемента. Такой отступ не принимает отрицателных значений, в отличие от внешнего отступа.
    3. Рамка (border)
    4. Внешний отступ (margin) добавляет отступы за границами элемента, создавая тем самым промежутки между элементами. Они всегда остаются прозрачными. Через них виден фон родительского элемента.

Схлопывание:
    1. Применяется только для вертикальных отступов.
    2. Ширина общего отступа равна ширине большего из исходных.

! box-sizing: border-box; - значения ширины и высоты блока не будут меняться от параметров padding и border, т.е. они включаются в один (единый) блок. 

Обтекаемые элементы: float.
float: left; выравнивание по левой стороне содержащего элементы, а весь контент выравнивается по правой.
float: right; выравнивание по правой стороне содаржаего элементы, а весь контент выравнивается по левой.
float: none; значение по умолчанию.

Особенности float:
    1. Элемент сдвигается влево или вправо.
    2. Блочные элементы ведут себя, как будто элемента с float нет.
    3. Строчные элементы обтекают блок с float.
    4. Элементы при наличии float получает display: block; (т.е. блочную структуру)
    5. Вертикальные отступы не сливаются.

Для float:
    overflow: hidden; скрывает перекрытие блоками при наезде на блок с float.
    clear: both; для того что бы наехавший блок заметил блок с float.

Псевдоклассы:
Псевдоклассы - это атрибуты, назначаемые строго к селекторам с намерение опеределить реакцию или состояние для данного селектора.
Определяющие состояние:
    a:link - ссылается на непосещённую ссылку.
    a:visited - ссылается на посещённую ссылку.
    a:hover - ссылается на любой элемент, по которому проводят курсором мыши.
    a:active - ссылается на активизированный пользователем элемент.
    :valid - выберет поля формы, содеримое которых прошло проверку в браузере на соответствие указанному типу.
    :invalid - выберет поля формы, содержимое которых не соответствует указанному типу.
    :enabled - выберет все доступные (активные) поля форм.
    :disabled - выберет заблокированные поля форм, т.е. находящиеся в неативном состоянии.
    :in-range - выберет поля формы, значения которых не входят в установленный диапозон.
    :lang() - выбирает абзацы на указанном языке.
    :not(селектор) - выберет элементы, которые не содержат указанный селектор. Например, класс, идентификатор или сеектор элемента :not([type="submit"]).
    :checked - выбирает выделенные(выбранные пользователем) элементы.
 
Структурные псевдоклассы:
    :nth-child(odd) - выбирает нечётные дочерние элементы.
    :nth-child(even) - выбирает чётные дочерние элементы.
    :nth-child(3n) - выбирает каждый третий элемент среди дочерних
    :nth-child(3n+2) - выбирает каждый третий элемент, начиная со второго дочернего (+2)
    :nth-child(n+2) - выбирает все элементы, начиная со второго.
    :nth-child(3) - выбирает третий дочерний элемент.
    :nth-last-child() - в списке дочерних элементов выбирает элемент с указанным месторасположением, аналогично :nth-child(n), но начиная с последнего, в обратную сторону.
    :first-child -первый дочерний элемент.
    :last-child - последний дочерний элемент.
    :only-child - выбирает элемент, являющийся единственным дочерним элементом.
    :empty - выбирает элементы, у которых нет дочерних элементов.
    :root - выбирает корневой элемент в документы (элементы html)

Псевдоклассы по типу дочернего элемента:
    :nth-of-type() - выбирает элементы по аналогии с :nth-child(), при этом берёт во внимание только тип элемента.
    :first-of-type - позволяет выбирать первый дочерний элемент.
    :last-of-type - выбирает последний тэг конкретного типа.
    :nth-last-of-type() - выбирает элементы заданного типа в списке элементов в соответствии с указанным месторасположением начиная с конца.
    :only-of-type - выбирает единственный элемент указанного типа среди дочерних элементов родительского элемента.


Example:
    .parent:hover .child{
        background-color: blue;
    }
т.е. при наведении на блок с классом parent у дочернего элемента с классом child цвет фона изменится на синий.

Псевдоэлементы:
    :after - вставляет генетируемое содержимое после элемента.
    :before - вставляет генетируемое содержимое перед элементом.
    :first-letter - определяет стиль первого символа в тексте, применяется только к блочным элементам.
    :first-line - определяет стиль первой строки блочного текста, применяется только к блочным элементам.

Добавить текст/контент средствами css можно через content, example:
    .name_selector:after {
        content: ' super new! ';
    }
В результате такой записи после селектора name_selector будет выставка из super new!
Также возможно скомпоновать стили:
    .name_selector:nth-child(3):after{
        content: 'super new! ';
        color: red;
    }
Т.е. в результате этой записи третьему элементу из этого списка/класса добавили сообщение/контент, который будет выкрашен в красный цвет.

Таблицы в html:
Таблицы нужны для представления табличных данных. Для вёрстки страниц потеряли свою ценность.
Плюсы таблиц:
    1. Не перекрываются друг с другом при маленьких разрешениях;
    2. Легко сделать кроссбраузерный дизайн;
    3. Создание табличных элементов;
Минусы:
    1. Много лишнего кода.
    2. Громоздкий код - не каждый дизайи можно создать с помощью таблиц.
    3. Совсем непопулярная.
    4. Долгая загрузка.

<table>
<caption>Заголовок</caption>
    <tr>
        <td>Столбец 1</td>
    </tr>
    ...
</table>
td - table data (т.е. ячейка таблицы) - габариты определены содержимым, ведёт себя как строчный элемент, но можно задавать габариты как блочному элементу.
tr - table row (строка таблицы)
caption - заголовок таблицы (опционально)
rowspan - объединение по вертикали (строк)
colspan - объединение по горизонтали (столбцов)
table - элемент блочный, т.е. можно задавать и высоту и ширину. По умолчанию ширина и высота определяются содержимым её ячеек. И если не задавать ширину, она будет равна ширине самого широкого ряда.

Можно задавать внешнюю границу таблицы:
    table {border: 1px solid #000;}
Задавать границы для ячеек:
    td {border: 1px solid #000;}
Убрать в таблице двойные линии, которые образовались в месте стыка ячеек:
    table{border-collapse: collapse;} - используется для схлопывания двойных значений.
При указании border-collapse:separate - рамка становить двойной, а при значении collapse - одинарной.


Для отступов внутри таблицы и внутри ячейки:
    padding - используется внутри ячейки.
    border-spacing - внутри таблицы по отношению к ячейкам.

Для ввыравнивания по вертикали в таблицах используется:
    td{vertical-align: top;} /* bottom | baseline | middle */

Для работы с таблицей рекомендуют использовать генератор таблиц.
